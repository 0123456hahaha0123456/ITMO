
Составить запросы на языке SQL (пункты 1-7).
1. Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_СЕССИЯ.ЧЛВК_ИД.
Фильтры (AND): 
a) Н_ЛЮДИ.ФАМИЛИЯ > Ёлкин.
b) Н_СЕССИЯ.ИД > 14.
c) Н_СЕССИЯ.ИД > 27640.
Вид соединения: INNER JOIN.

select  Н_ЛЮДИ.ФАМИЛИЯ, Н_СЕССИЯ.ЧЛВК_ИД from Н_ЛЮДИ
	inner join Н_СЕССИЯ 
		on Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
  where 
    Н_ЛЮДИ.ФАМИЛИЯ > 'Ёлкин' and 
  	Н_СЕССИЯ.ИД > 27640
;






2. Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.НАЧАЛО.
Фильтры: (AND)
a) Н_ЛЮДИ.ИД = 142095.
b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 163484.
Вид соединения: LEFT JOIN.

select Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.НАЧАЛО from Н_ЛЮДИ
	left outer join Н_ОБУЧЕНИЯ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
	left outer join Н_УЧЕНИКИ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
where Н_ЛЮДИ.ИД = 142095 and Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 163484
;



3. Составить запрос, который ответит на вопрос, есть ли среди студентов вечерней формы обучения те, кто старше 25 лет.
select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ from Н_ПЛАНЫ
	inner join Н_ФОРМЫ_ОБУЧЕНИЯ 
		on Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = Н_ПЛАНЫ.ФО_ИД and
			Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очно-заочная(вечерняя)'
	inner join Н_УЧЕНИКИ
		on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	inner join Н_ОБУЧЕНИЯ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	inner join Н_ЛЮДИ
		on Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
			extract( YEAR from age(CURRENT_DATE, Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) > 25
; 





4. Найти группы, в которых в 2011 году было более 10 обучающихся студентов на ФКТИУ.
Для реализации использовать подзапрос.

select T1.ГРУППА, T1.kol from (
		select Н_УЧЕНИКИ.ГРУППА, count(Н_УЧЕНИКИ.ИД) as kol from Н_УЧЕНИКИ
			inner join Н_ПЛАНЫ
				on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД and
				   Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД = '2010/2011'
			inner join Н_ОТДЕЛЫ
				on Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД and
				   Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
		group by Н_УЧЕНИКИ.ГРУППА	
	) as T1
where T1.kol > 10
order by T1.kol
;


5. Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя 
оценка равна максимальной оценк(е|и) в группе 3100.


select T1.ИД, T1.ФАМИЛИЯ, T1.ИМЯ, T1.ОТЧЕСТВО, T1.Ср_оценка from (
		select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, 
		avg(cast(Н_ВЕДОМОСТИ.ОЦЕНКА as int4)) as Ср_оценка from Н_ОБУЧЕНИЯ
			inner join Н_УЧЕНИКИ
				on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
					Н_УЧЕНИКИ.ГРУППА = '4100'
			inner join Н_ЛЮДИ
				on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
			inner join Н_ВЕДОМОСТИ
				on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
					(Н_ВЕДОМОСТИ.ОЦЕНКА = '1' or  
					Н_ВЕДОМОСТИ.ОЦЕНКА = '2' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '3' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '4' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '5' )
		group by Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО
	) as T1
where T1.Ср_оценка > (
		select max(cast(Н_ВЕДОМОСТИ.ОЦЕНКА as int4)) from Н_ОБУЧЕНИЯ
			inner join Н_УЧЕНИКИ
				on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
					Н_УЧЕНИКИ.ГРУППА = '3100'
			inner join Н_ЛЮДИ
				on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
			inner join Н_ВЕДОМОСТИ
				on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
					(Н_ВЕДОМОСТИ.ОЦЕНКА = '1' or 
					Н_ВЕДОМОСТИ.ОЦЕНКА = '2' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '3' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '4' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '5' )
		group by Н_УЧЕНИКИ.ГРУППА
	)
;

----------------------------------------------------------------------------------------
select T1.ИД, T1.ФАМИЛИЯ, T1.ИМЯ, T1.ОТЧЕСТВО, T1.Ср_оценка from (
		select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, 
		avg(cast(Н_ВЕДОМОСТИ.ОЦЕНКА as int4)) as Ср_оценка from Н_ОБУЧЕНИЯ
			inner join Н_УЧЕНИКИ
				on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
					Н_УЧЕНИКИ.ГРУППА = '4100'
			inner join Н_ЛЮДИ
				on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
			inner join Н_ВЕДОМОСТИ
				on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
					(Н_ВЕДОМОСТИ.ОЦЕНКА = '99' or  
					Н_ВЕДОМОСТИ.ОЦЕНКА = '2' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '3' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '4' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '5' )
		group by Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО
	) as T1
where T1.Ср_оценка > (
		select max(cast(Н_ВЕДОМОСТИ.ОЦЕНКА as int4)) from Н_ОБУЧЕНИЯ
			inner join Н_УЧЕНИКИ
				on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
					Н_УЧЕНИКИ.ГРУППА = '3100'
			inner join Н_ЛЮДИ
				on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
			inner join Н_ВЕДОМОСТИ
				on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
					(Н_ВЕДОМОСТИ.ОЦЕНКА = '99' or 
					Н_ВЕДОМОСТИ.ОЦЕНКА = '2' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '3' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '4' or
					Н_ВЕДОМОСТИ.ОЦЕНКА = '5' )
		group by Н_УЧЕНИКИ.ГРУППА
	)
;






select T1.ИД, T1.ФАМИЛИЯ, T1.ИМЯ, T1.ОТЧЕСТВО, T1.Ср_оценка from (
		select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, 
		avg(cast(Н_ВЕДОМОСТИ.ОЦЕНКА as int4)) as Ср_оценка from Н_ОБУЧЕНИЯ
			inner join Н_УЧЕНИКИ
				on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
					Н_УЧЕНИКИ.ГРУППА = '4100'
			inner join Н_ЛЮДИ
				on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
			inner join Н_ВЕДОМОСТИ
				on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'зачет' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'неявка' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'осв' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'незач'
		group by Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО
	) as T1
where T1.Ср_оценка > (
		select max(cast(Н_ВЕДОМОСТИ.ОЦЕНКА as int4)) from Н_ОБУЧЕНИЯ
			inner join Н_УЧЕНИКИ
				on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
					Н_УЧЕНИКИ.ГРУППА = '3100'
			inner join Н_ЛЮДИ
				on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
			inner join Н_ВЕДОМОСТИ
				on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'зачет' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'неявка' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'осв' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'незач'
		group by Н_УЧЕНИКИ.ГРУППА
	)
;








select max(cast(Н_ВЕДОМОСТИ.ОЦЕНКА as int4)) from Н_ОБУЧЕНИЯ
			inner join Н_УЧЕНИКИ
				on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
					Н_УЧЕНИКИ.ГРУППА = '3100'
			inner join Н_ЛЮДИ
				on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
			inner join Н_ВЕДОМОСТИ
				on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'зачет' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'неявка' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'осв' and
					Н_ВЕДОМОСТИ.ОЦЕНКА != 'незач'
		group by Н_УЧЕНИКИ.ГРУППА
;




select Н_ВЕДОМОСТИ.ОЦЕНКА from Н_ОБУЧЕНИЯ
	inner join Н_УЧЕНИКИ
		on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
			Н_УЧЕНИКИ.ГРУППА = '3100'
	inner join Н_ЛЮДИ
		on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	inner join Н_ВЕДОМОСТИ
		on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД 
group by Н_ВЕДОМОСТИ.ОЦЕНКА
;




select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, 
avg(cast(Н_ВЕДОМОСТИ.ОЦЕНКА as int4)) as Ср_оценка from Н_ОБУЧЕНИЯ
	inner join Н_УЧЕНИКИ
		on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД and
			Н_УЧЕНИКИ.ГРУППА = '4100'
	inner join Н_ЛЮДИ
		on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	inner join Н_ВЕДОМОСТИ
		on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
			Н_ВЕДОМОСТИ.ОЦЕНКА != 'зачет' and
			Н_ВЕДОМОСТИ.ОЦЕНКА != 'неявка' and
			Н_ВЕДОМОСТИ.ОЦЕНКА != 'осв' and
			Н_ВЕДОМОСТИ.ОЦЕНКА != 'незач'
group by Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО
;



inner join Н_ВЕДОМОСТИ
	on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД and 
		Н_ВЕДОМОСТИ.ОЦЕНКА != 'зачет' and
		Н_ВЕДОМОСТИ.ОЦЕНКА != 'неявка' and
		Н_ВЕДОМОСТИ.ОЦЕНКА != 'осв' and
		Н_ВЕДОМОСТИ.ОЦЕНКА != 'незач'




6. Получить список студентов, отчисленных до первого сентября 2012 года с очной или заочной 
формы обучения (специальность: Программная инженерия). В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер пункта приказа;
Для реализации использовать соединение таблиц.



select Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ,
		 Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.КОНЕЦ_ПО_ПРИКАЗУ from Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ 
	inner join Н_НАПР_СПЕЦ
		on Н_НАПР_СПЕЦ.ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД and
			Н_НАПР_СПЕЦ.НАИМЕНОВАНИЕ = 'Программная инженерия'
	inner join Н_ПЛАНЫ
		on Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
	inner join Н_ФОРМЫ_ОБУЧЕНИЯ 
		on Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = Н_ПЛАНЫ.ФО_ИД and
			Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Заочная'
	inner join Н_УЧЕНИКИ
		on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД and
			Н_УЧЕНИКИ.КОНЕЦ_ПО_ПРИКАЗУ < Н_УЧЕНИКИ.КОНЕЦ and 
			Н_УЧЕНИКИ.КОНЕЦ_ПО_ПРИКАЗУ < '2012-09-01'
	inner join Н_ОБУЧЕНИЯ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	inner join Н_ЛЮДИ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
union 
select Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ,
		 Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.КОНЕЦ_ПО_ПРИКАЗУ from Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ 
	inner join Н_НАПР_СПЕЦ
		on Н_НАПР_СПЕЦ.ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД and
			Н_НАПР_СПЕЦ.НАИМЕНОВАНИЕ = 'Программная инженерия'
	inner join Н_ПЛАНЫ
		on Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
	inner join Н_ФОРМЫ_ОБУЧЕНИЯ 
		on Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = Н_ПЛАНЫ.ФО_ИД and
			Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
	inner join Н_УЧЕНИКИ
		on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД and
			Н_УЧЕНИКИ.КОНЕЦ_ПО_ПРИКАЗУ < Н_УЧЕНИКИ.КОНЕЦ and
			Н_УЧЕНИКИ.КОНЕЦ_ПО_ПРИКАЗУ < '2012-09-01'
	inner join Н_ОБУЧЕНИЯ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	inner join Н_ЛЮДИ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
;



7. Вывести список людей, не являющихся или не являвшихся студентами ФКТИУ (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ).
 В запросе нельзя использовать DISTINCT.


select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО from (
		select Н_ОБУЧЕНИЯ.ЧЛВК_ИД from Н_ПЛАНЫ
			inner join Н_ОТДЕЛЫ
				on Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД and
				   Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
			inner join Н_УЧЕНИКИ
				on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
			inner join Н_ОБУЧЕНИЯ
				on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	) as T1
	right outer join Н_ЛЮДИ
		on Н_ЛЮДИ.ИД = T1.ЧЛВК_ИД
where T1.ЧЛВК_ИД is null
;

----------------------------------------------------------------------------------------------------
Н_ПЛАНЫ
Н_ОТДЕЛЫ
Н_УЧЕНИКИ
Н_ОБУЧЕНИЯ
Н_ЛЮДИ

select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ from Н_ОБУЧЕНИЯ
	inner join Н_ЛЮДИ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД and 
		   Н_ЛЮДИ.ИД = 114995
	inner join Н_УЧЕНИКИ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	inner join Н_ПЛАНЫ
		on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	inner join Н_ОТДЕЛЫ
		on Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
;



select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ from Н_ОБУЧЕНИЯ
	inner join Н_ЛЮДИ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД 
	inner join Н_УЧЕНИКИ
		on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	inner join Н_ПЛАНЫ
		on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	inner join Н_ОТДЕЛЫ
		on Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
where Н_ЛЮДИ.ИД = 114995
;







select Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО from Н_ЛЮДИ
	where Н_ЛЮДИ.ИД = 114995




114995
Косарева | Елена | Владимировна



-------+------------------------------+-------+-------
 public | Н_ВЕДОМОСТИ                  | table | ucheb
 public | Н_ВИДЫ_ОБУЧЕНИЯ              | table | ucheb
 public | Н_ВИДЫ_РАБОТ                 | table | ucheb
 public | Н_ГРУППЫ_ПЛАНОВ              | table | ucheb
 public | Н_ДИСЦИПЛИНЫ                 | table | ucheb
 public | Н_ИЗМ_ЛЮДИ                   | table | ucheb
 public | Н_КВАЛИФИКАЦИИ               | table | ucheb
 public | Н_КОМПОНЕНТЫ                 | table | ucheb
 public | Н_ЛЮДИ                       | table | ucheb
 public | Н_ЛЮДИ_ПО_ПАДЕЖАМ            | table | ucheb
 public | Н_НАПР_СПЕЦ                  | table | ucheb
 public | Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ        | table | ucheb
 public | Н_ОБУЧЕНИЯ                   | table | ucheb
 public | Н_ОТДЕЛЫ                     | table | ucheb
 public | Н_ОЦЕНКИ                     | table | ucheb
 public | Н_ПЛАНЫ                      | table | ucheb
 public | Н_СВОЙСТВА_ВР                | table | ucheb
 public | Н_СВОЙСТВА_ОТДЕЛОВ           | table | ucheb
 public | Н_СЕССИЯ                     | table | ucheb
 public | Н_СОДЕРЖАНИЯ_ЭЛЕМЕНТОВ_СТРОК | table | ucheb
 public | Н_СТРОКИ_ПЛАНОВ              | table | ucheb
 public | Н_ТИПЫ_ВЕДОМОСТЕЙ            | table | ucheb
 public | Н_ТИПЫ_ПЛАНОВ                | table | ucheb
 public | Н_ТИПЫ_СТАНДАРТОВ            | table | ucheb
 public | Н_УЧЕБНЫЕ_ГОДА               | table | ucheb
 public | Н_УЧЕНИКИ                    | table | ucheb
 public | Н_ФОРМЫ_ОБУЧЕНИЯ             | table | ucheb
 public | Н_ХАРАКТЕРИСТИКИ_ВИДОВ_РАБОТ | table | ucheb
 public | Н_ХАРАКТЕРИСТИКИ_ОТДЕЛОВ     | table | ucheb
 public | Н_ЦИКЛЫ_ДИСЦИПЛИН            | table | ucheb
 public | Н_ЭЛЕМЕНТЫ_СТРОК             | table | ucheb

